{"ast":null,"code":"var _jsxFileName = \"/home/artem/Desktop/projects/mcc_tree_app/src/components/ModalAdd.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModalAdd({\n  isOpen,\n  onClose,\n  nodes,\n  children\n}) {\n  _s();\n  if (!isOpen) return null;\n  const titleNodeRef = useRef(null);\n  const addChildNode = (nodes, parentId, newNode) => {\n    return nodes.map(node => {\n      if (node.id === parentId) {\n        return {\n          ...node,\n          children: [...(node.children || []), newNode]\n        };\n      } else if (node.children) {\n        return {\n          ...node,\n          children: addChildNode(node.children, parentId, newNode)\n        };\n      }\n      return node;\n    });\n  };\n  const getMaxId = arr => {\n    let maxId = 0;\n    arr.forEach(node => {\n      if (node.id > maxId) {\n        maxId = node.id;\n      }\n      if (node.children) {\n        const childMaxId = getMaxId(node.children);\n        if (childMaxId > maxId) {\n          maxId = childMaxId;\n        }\n      }\n    });\n    return maxId;\n  };\n  const onSubmitAdd = ev => {\n    var _titleNodeRef$current;\n    ev.preventDefault();\n    const newNode = {\n      id: getMaxId(nodes) + 1,\n      name: ((_titleNodeRef$current = titleNodeRef.current) === null || _titleNodeRef$current === void 0 ? void 0 : _titleNodeRef$current.value) || ''\n    };\n    if (selectedNode !== 0) {\n      const updatedNodes = addChildNode(nodes, selectedNode, newNode);\n      setNodes(updatedNodes);\n    } else {\n      setNodes([...nodes, newNode]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [children, \"  aaaaa\", /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form form-control w-100\",\n        onSubmit: onSubmitAdd,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group m-3\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: titleNodeRef,\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"\\u0422\\u0435\\u043C\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success m-3\",\n          type: \"submit\",\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(ModalAdd, \"jhuKyyiOLhBG6bDkllBAa7oo/WU=\");\n_c = ModalAdd;\nexport default ModalAdd;\nvar _c;\n$RefreshReg$(_c, \"ModalAdd\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","ModalAdd","isOpen","onClose","nodes","children","_s","titleNodeRef","addChildNode","parentId","newNode","map","node","id","getMaxId","arr","maxId","forEach","childMaxId","onSubmitAdd","ev","_titleNodeRef$current","preventDefault","name","current","value","selectedNode","updatedNodes","setNodes","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","ref","type","placeholder","_c","$RefreshReg$"],"sources":["/home/artem/Desktop/projects/mcc_tree_app/src/components/ModalAdd.tsx"],"sourcesContent":["import React, {useRef} from \"react\";\n\ninterface Node {\n    id: number;\n    name: string;\n    children?: Node[];\n}\n\ninterface ModalAddProps {\n    isOpen: boolean;\n    onClose: () => void;\n    nodes: Node[];\n    selectedNode:number;\n    children: React.ReactNode;\n}\n\nfunction ModalAdd({ isOpen, onClose, nodes, children }: ModalAddProps) {\n    if (!isOpen) return null;\n\n    const titleNodeRef: React.RefObject<HTMLInputElement> = useRef<HTMLInputElement>(null);\n\n    const addChildNode = (nodes: Node[], parentId: number, newNode: Node): Node[] => {\n        return nodes.map((node) => {\n            if (node.id === parentId) {\n                return {\n                    ...node,\n                    children: [...(node.children || []), newNode],\n                };\n            } else if (node.children) {\n                return {\n                    ...node,\n                    children: addChildNode(node.children, parentId, newNode),\n                };\n            }\n            return node;\n        });\n    };\n    const getMaxId = (arr: Node[]): number => {\n        let maxId = 0;\n        arr.forEach((node) => {\n            if (node.id > maxId) {\n                maxId = node.id;\n            }\n            if (node.children) {\n                const childMaxId = getMaxId(node.children);\n                if (childMaxId > maxId) {\n                    maxId = childMaxId;\n                }\n            }\n        });\n        return maxId;\n    };\n    const onSubmitAdd = (ev: any) => {\n        ev.preventDefault();\n\n        const newNode: Node = {\n            id: getMaxId(nodes) + 1,\n            name: titleNodeRef.current?.value || '',\n        };\n\n\n        if(selectedNode!==0) {\n            const updatedNodes = addChildNode(nodes, selectedNode, newNode);\n            setNodes(updatedNodes);\n        }else{\n            setNodes([...nodes, newNode]);\n        }\n    }\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal-overlay\" onClick={onClose} />\n            <div className=\"modal-content\">{children}  aaaaa\n                <form className=\"form form-control w-100\" onSubmit={onSubmitAdd}>\n                    <div className=\"form-group m-3\">\n                        <input ref={titleNodeRef} type=\"text\" className=\"form-control\" placeholder=\"Тема\"></input>\n                    </div>\n                    <button className=\"btn btn-success m-3\" type=\"submit\">Добавить</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default ModalAdd;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}