{"ast":null,"code":"var _jsxFileName = \"/home/artem/Desktop/projects/mcc_tree_app/src/components/Tree.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tree = () => {\n  _s();\n  const titleNodeRef = useRef(null);\n  const [nodes, setNodes] = useState([{\n    id: 1,\n    name: 'Element 1',\n    children: [{\n      id: 2,\n      name: 'Element 1.1',\n      children: [{\n        id: 3,\n        name: 'Element 1.1.1'\n      }, {\n        id: 4,\n        name: 'Element 1.1.2'\n      }]\n    }, {\n      id: 5,\n      name: 'Element 1.2'\n    }]\n  }, {\n    id: 7,\n    name: 'Element 1'\n  }]);\n  const getMaxId = arr => {\n    let maxId = 0;\n    arr.forEach(item => {\n      if (item.id > maxId) {\n        maxId = item.id;\n      }\n      if (item.children) {\n        const childMaxId = getMaxId(item.children);\n        if (childMaxId > maxId) {\n          maxId = childMaxId;\n        }\n      }\n    });\n    return maxId;\n  };\n  const onSubmitAdd = ev => {\n    ev.preventDefault();\n    const newNode = {\n      id: 6,\n      name: 'Element 1.3'\n    };\n    const lastId = getMaxId(nodes);\n    console.log(lastId); // 5\n  };\n\n  const renderTree = items => {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, item.children && renderTree(item.children)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderTree(nodes), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form form-control w-100\",\n      onSubmit: onSubmitAdd,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group m-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: titleNodeRef,\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"\\u0422\\u0435\\u043C\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success m-3\",\n        type: \"submit\",\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(Tree, \"Ox/UGKmpYdUDxhs6FgwNTO2XMWA=\");\n_c = Tree;\nexport default Tree;\nvar _c;\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","Tree","_s","titleNodeRef","nodes","setNodes","id","name","children","getMaxId","arr","maxId","forEach","item","childMaxId","onSubmitAdd","ev","preventDefault","newNode","lastId","console","log","renderTree","items","map","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","ref","type","placeholder","_c","$RefreshReg$"],"sources":["/home/artem/Desktop/projects/mcc_tree_app/src/components/Tree.tsx"],"sourcesContent":["import React, {useRef, useState} from 'react';\nimport AddItem from './AddItem';\n\ninterface Item {\n    id: number;\n    name: string;\n    children?: Item[];\n}\n\nconst Tree: React.FC = () => {\n\n    const titleNodeRef: React.RefObject<HTMLInputElement> = useRef<HTMLInputElement>(null);\n\n    const [nodes, setNodes] = useState<Item[]>([\n        {\n            id: 1,\n            name: 'Element 1',\n            children: [\n                {\n                    id: 2,\n                    name: 'Element 1.1',\n                    children: [\n                        {\n                            id: 3,\n                            name: 'Element 1.1.1',\n                        },\n                        {\n                            id: 4,\n                            name: 'Element 1.1.2',\n                        },\n                    ],\n                },\n                {\n                    id: 5,\n                    name: 'Element 1.2',\n                },\n            ],\n\n        },\n        {\n            id: 7,\n            name: 'Element 1',\n        }\n    ]);\n\n    const getMaxId = (arr: Item[]): number => {\n        let maxId = 0;\n        arr.forEach((item) => {\n            if (item.id > maxId) {\n                maxId = item.id;\n            }\n            if (item.children) {\n                const childMaxId = getMaxId(item.children);\n                if (childMaxId > maxId) {\n                    maxId = childMaxId;\n                }\n            }\n        });\n        return maxId;\n    };\n\n    const onSubmitAdd = (ev: any) => {\n        ev.preventDefault();\n        const newNode: Item = {\n            id: 6,\n            name: 'Element 1.3',\n        };\n\n\n        const lastId = getMaxId(nodes);\n\n        console.log(lastId); // 5\n    }\n\n    const renderTree = (items: Item[]) => {\n        return (\n            <ul>\n                {items.map((item) => (\n                    <li key={item.id}>\n                        {item.name}\n                        {item.children && renderTree(item.children)}\n                    </li>\n                ))}\n            </ul>\n        );\n    };\n\n    return (\n        <div>\n            {renderTree(nodes)}\n            <form className=\"form form-control w-100\" onSubmit={onSubmitAdd}>\n                <div className=\"form-group m-3\">\n                    <input ref={titleNodeRef} type=\"text\" className=\"form-control\" placeholder=\"Тема\"></input>\n                </div>\n                <button className=\"btn btn-success m-3\" type=\"submit\">Добавить</button>\n            </form>\n            {/*<AddItem />*/}\n        </div>\n    );\n};\n\nexport default Tree;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}